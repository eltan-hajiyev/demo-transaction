<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.demotransaction.DemoTransactionalTests" tests="6" skipped="0" failures="0" errors="0" timestamp="2021-01-13T18:53:48" hostname="USER004379" time="27.581">
  <properties/>
  <testcase name="default_select_update()" classname="com.example.demotransaction.DemoTransactionalTests" time="6.584"/>
  <testcase name="test_NoTransactional_lock_select_update()" classname="com.example.demotransaction.DemoTransactionalTests" time="0.04"/>
  <testcase name="transactional_select_update()" classname="com.example.demotransaction.DemoTransactionalTests" time="5.434"/>
  <testcase name="transactional_lock_timeout_select_update()" classname="com.example.demotransaction.DemoTransactionalTests" time="5.045"/>
  <testcase name="transactional_ReadOnly_select_update()" classname="com.example.demotransaction.DemoTransactionalTests" time="5.448"/>
  <testcase name="transactional_lock_select_update()" classname="com.example.demotransaction.DemoTransactionalTests" time="5.021"/>
  <system-out><![CDATA[22:53:22.447 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
22:53:22.487 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
22:53:22.569 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.demotransaction.DemoTransactionalTests] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
22:53:22.600 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.demotransaction.DemoTransactionalTests], using SpringBootContextLoader
22:53:22.722 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.demotransaction.DemoTransactionalTests]: class path resource [com/example/demotransaction/DemoTransactionalTests-context.xml] does not exist
22:53:22.724 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.demotransaction.DemoTransactionalTests]: class path resource [com/example/demotransaction/DemoTransactionalTestsContext.groovy] does not exist
22:53:22.725 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.demotransaction.DemoTransactionalTests]: no resource found for suffixes {-context.xml, Context.groovy}.
22:53:22.727 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.demotransaction.DemoTransactionalTests]: DemoTransactionalTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
22:53:22.840 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.demotransaction.DemoTransactionalTests]
22:53:23.209 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\004379\Documents\example\demo-transaction\build\classes\java\main\com\example\demotransaction\DemoTransactionApplication.class]
22:53:23.212 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.demotransaction.DemoTransactionApplication for test class com.example.demotransaction.DemoTransactionalTests
22:53:23.751 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.demotransaction.DemoTransactionalTests]: using defaults.
22:53:23.753 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
22:53:23.799 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7ea59605, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7f857cff, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@72bb2f34, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@28811241, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7a46acea, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2e7045d9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5990dac, org.springframework.test.context.event.EventPublishingTestExecutionListener@252a0444, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6a44cdf7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@46b603eb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@b8f92fc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7e72afed, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3295fea1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@44ca1a43]
22:53:23.809 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5dfec33a testClass = DemoTransactionalTests, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3aca22eb testClass = DemoTransactionalTests, locations = '{}', classes = '{class com.example.demotransaction.DemoTransactionApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@41fb7dbf, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4fc099a5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2eff2086, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cfa5c9c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@643a5233, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@3ff838d0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
22:53:23.881 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.4.1)

2021-01-13 22:53:24.919  INFO 2708 --- [    Test worker] c.e.d.DemoTransactionalTests             : Starting DemoTransactionalTests using Java 1.8.0_261 on User004379 with PID 2708 (started by 004379 in C:\Users\004379\Documents\example\demo-transaction)
2021-01-13 22:53:24.924  INFO 2708 --- [    Test worker] c.e.d.DemoTransactionalTests             : No active profile set, falling back to default profiles: default
2021-01-13 22:53:28.046  INFO 2708 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-01-13 22:53:28.395  INFO 2708 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 318 ms. Found 4 JPA repository interfaces.
2021-01-13 22:53:31.118  INFO 2708 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-13 22:53:32.080  INFO 2708 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-13 22:53:32.491  INFO 2708 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-13 22:53:32.742  INFO 2708 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-13 22:53:33.510  INFO 2708 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-13 22:53:34.049  INFO 2708 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table if exists book CASCADE 
Hibernate: drop table if exists school CASCADE 
Hibernate: drop table if exists student CASCADE 
Hibernate: drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: create table book (id integer not null, name varchar(255), student_id integer, primary key (id))
Hibernate: create table school (id integer not null, location varchar(255), name varchar(255), primary key (id))
Hibernate: create table student (id integer not null, count integer, name varchar(255), status boolean, primary key (id))
Hibernate: alter table book add constraint FK8ik6mo7lcgguka7gglqr88in1 foreign key (student_id) references student
2021-01-13 22:53:37.136  INFO 2708 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-13 22:53:37.163  INFO 2708 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-13 22:53:40.330  INFO 2708 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService
2021-01-13 22:53:40.369  INFO 2708 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'taskExecutor'
2021-01-13 22:53:41.442  WARN 2708 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-13 22:53:48.205  INFO 2708 --- [    Test worker] c.e.d.DemoTransactionalTests             : Started DemoTransactionalTests in 24.312 seconds (JVM running for 29.605)
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select book0_.id as id1_0_0_, book0_.name as name2_0_0_, book0_.student_id as student_3_0_0_ from book book0_ where book0_.id=?
Hibernate: select book0_.id as id1_0_0_, book0_.name as name2_0_0_, book0_.student_id as student_3_0_0_ from book book0_ where book0_.id=?
Hibernate: select book0_.id as id1_0_0_, book0_.name as name2_0_0_, book0_.student_id as student_3_0_0_ from book book0_ where book0_.id=?
Hibernate: update student set count=?, status=? where id=?
Hibernate: update student set count=?, status=? where id=?
Hibernate: update student set count=?, status=? where id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: update student set count=?, status=? where id=?
Hibernate: update student set count=?, status=? where id=?
Hibernate: update student set count=?, status=? where id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_, student0_.count as count2_2_, student0_.name as name3_2_, student0_.status as status4_2_ from student student0_ where student0_.id=? for update
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_, student0_.count as count2_2_, student0_.name as name3_2_, student0_.status as status4_2_ from student student0_ where student0_.id=? for update
Hibernate: select student0_.id as id1_2_, student0_.count as count2_2_, student0_.name as name3_2_, student0_.status as status4_2_ from student student0_ where student0_.id=? for update
Hibernate: update student set count=?, status=? where id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
Hibernate: select student0_.id as id1_2_, student0_.count as count2_2_, student0_.name as name3_2_, student0_.status as status4_2_ from student student0_ where student0_.id=? for update
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_, student0_.count as count2_2_, student0_.name as name3_2_, student0_.status as status4_2_ from student student0_ where student0_.id=? for update
Hibernate: select student0_.id as id1_2_, student0_.count as count2_2_, student0_.name as name3_2_, student0_.status as status4_2_ from student student0_ where student0_.id=? for update
Hibernate: update student set count=?, status=? where id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select books0_.student_id as student_3_0_0_, books0_.id as id1_0_0_, books0_.id as id1_0_1_, books0_.name as name2_0_1_, books0_.student_id as student_3_0_1_ from book books0_ where books0_.student_id=?
Hibernate: select student0_.id as id1_2_0_, student0_.count as count2_2_0_, student0_.name as name3_2_0_, student0_.status as status4_2_0_ from student student0_ where student0_.id=?
]]></system-out>
  <system-err><![CDATA[1:::::::Student [id=1, status=false, name=Rustem, count=0, books=[Book{id=1, name='Tarix 9', studentId=1}]]
1:::::::Student [id=1, status=false, name=Rustem, count=0, books=[Book{id=1, name='Tarix 9', studentId=1}]]
1:::::::Student [id=1, status=false, name=Rustem, count=0, books=[Book{id=1, name='Tarix 9', studentId=1}]]
2:::::::Student [id=1, status=true, name=Rustem, count=1, books=[Book{id=1, name='Tarix 9', studentId=1}]]
2:::::::Student [id=1, status=true, name=Rustem, count=3, books=[Book{id=1, name='Tarix 9', studentId=1}]]
2:::::::Student [id=1, status=true, name=Rustem, count=2, books=[Book{id=1, name='Tarix 9', studentId=1}]]
count:2
1:::::::Student [id=2, status=false, name=Flora, count=0, books=[]]
1:::::::Student [id=2, status=false, name=Flora, count=0, books=[]]
1:::::::Student [id=2, status=false, name=Flora, count=0, books=[]]
2:::::::Student [id=2, status=true, name=Flora, count=1, books=[]]
2:::::::Student [id=2, status=true, name=Flora, count=2, books=[]]
2:::::::Student [id=2, status=true, name=Flora, count=3, books=[]]
count:3
1:::::::Student [id=5, status=false, name=Rahman, count=0, books=[]]
2:::::::Student [id=5, status=true, name=Rahman, count=1, books=[]]
1:::::::Student [id=3, status=false, name=Tahir, count=0, books=[]]
1:::::::Student [id=3, status=false, name=Tahir, count=0, books=[]]
1:::::::Student [id=3, status=false, name=Tahir, count=0, books=[]]
2:::::::Student [id=3, status=true, name=Tahir, count=1, books=[]]
2:::::::Student [id=3, status=true, name=Tahir, count=2, books=[]]
2:::::::Student [id=3, status=true, name=Tahir, count=3, books=[]]
count:0
1:::::::Student [id=4, status=false, name=Abbas, count=0, books=[]]
2:::::::Student [id=4, status=true, name=Abbas, count=1, books=[]]
1:::::::Student [id=4, status=true, name=Abbas, count=1, books=[]]
1:::::::Student [id=4, status=true, name=Abbas, count=1, books=[]]
count:1
]]></system-err>
</testsuite>
